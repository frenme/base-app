// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/cards": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Get cards",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Take",
                        "name": "take",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Skip",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cards response",
                        "schema": {
                            "$ref": "#/definitions/dto.CardsResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CardDTO": {
            "type": "object",
            "properties": {
                "back_image_url": {
                    "type": "string",
                    "example": "Card Back Image URL"
                },
                "description": {
                    "type": "string",
                    "example": "Card Description"
                },
                "front_image_url": {
                    "type": "string",
                    "example": "Card Front Image URL"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Card Name"
                },
                "num_users_own": {
                    "type": "integer",
                    "example": 5
                },
                "num_users_wish": {
                    "type": "integer",
                    "example": 10
                },
                "status": {
                    "type": "string",
                    "example": "Card Status"
                }
            }
        },
        "dto.CardsResponseDTO": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CardDTO"
                    }
                },
                "skip": {
                    "type": "integer"
                },
                "take": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Some error message"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/card-service",
	Schemes:          []string{},
	Title:            "Card service",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
