x-kafka-service: &kafka-service
  image: bitnami/kafka:${KAFKA_VERSION}
  restart: unless-stopped
  networks:
    - app_shared_network
  logging:
    options:
      max-size: "10m"
      max-file: "3"
  depends_on:
    - zookeeper

x-kafka-env: &kafka-env
  KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_DEFAULT_REPLICATION_FACTOR: 3
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: false

services:
  kafka-setup:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka-setup
    entrypoint: [ "/bin/bash", "/setup.sh" ]
    environment:
      - BOOTSTRAP_SERVER=kafka1:9092
    networks:
      - app_shared_network
    volumes:
      - ./setup.sh:/setup.sh
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  zookeeper:
    image: bitnami/zookeeper:${ZOOKEEPER_VERSION}
    container_name: zookeeper
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - "2181"
    networks:
      - app_shared_network
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logback.xml:/opt/bitnami/zookeeper/conf/logback.xml
      - zookeeper_data:/bitnami/zookeeper
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok" ]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka1:
    <<: *kafka-service
    container_name: kafka1
    environment:
      <<: *kafka-env
      KAFKA_BROKER_ID: "1"
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
    expose:
      - "9092"
    volumes:
      - ./log4j.properties:/opt/bitnami/kafka/config/log4j.properties
      - kafka1_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null" ]
      interval: 15s
      timeout: 10s
      retries: 5

  kafka2:
    <<: *kafka-service
    container_name: kafka2
    environment:
      <<: *kafka-env
      KAFKA_BROKER_ID: "2"
      KAFKA_LISTENERS: PLAINTEXT://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
    expose:
      - "9093"
    volumes:
      - ./log4j.properties:/opt/bitnami/kafka/config/log4j.properties
      - kafka2_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9093 --list > /dev/null" ]
      interval: 15s
      timeout: 10s
      retries: 5

  kafka3:
    <<: *kafka-service
    container_name: kafka3
    environment:
      <<: *kafka-env
      KAFKA_BROKER_ID: "3"
      KAFKA_LISTENERS: PLAINTEXT://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
    expose:
      - "9094"
    volumes:
      - ./log4j.properties:/opt/bitnami/kafka/config/log4j.properties
      - kafka3_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9094 --list > /dev/null" ]
      interval: 15s
      timeout: 10s
      retries: 5

networks:
  app_shared_network:
    external: true

volumes:
  zookeeper_data:
  kafka1_data:
  kafka2_data:
  kafka3_data: